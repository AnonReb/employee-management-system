{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\time-attendance-system\\\\src\\\\src\\\\pages\\\\WorkHours.js\",\n  _s = $RefreshSig$();\n// src/pages/WorkingHours.js\nimport React, { useState, useEffect } from 'react';\nimport './WorkHours.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkHours = () => {\n  _s();\n  const [timeLeft, setTimeLeft] = useState('');\n  useEffect(() => {\n    const calculateTimeLeft = () => {\n      const now = new Date();\n      const start = new Date();\n      const end = new Date();\n\n      // Set start time to 8:00 AM and end time to 4:00 PM\n      start.setHours(8, 0, 0, 0); // 8:00 AM\n      end.setHours(16, 0, 0, 0); // 4:00 PM\n\n      if (now < start) {\n        setTimeLeft('The workday has not started yet.');\n      } else if (now >= end) {\n        setTimeLeft('The workday has ended.');\n      } else {\n        const difference = end - now;\n        const hours = Math.floor(difference / (1000 * 60 * 60) % 24);\n        const minutes = Math.floor(difference / 1000 / 60 % 60);\n        const seconds = Math.floor(difference / 1000 % 60);\n        setTimeLeft(`${hours}h ${minutes}m ${seconds}s`);\n      }\n    };\n    calculateTimeLeft();\n    const timer = setInterval(calculateTimeLeft, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"working-hours-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Working Hours Countdown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countdown-timer\",\n      children: timeLeft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(WorkHours, \"+/rc1qCbzmIsyWx4idJnN9XKwiM=\");\n_c = WorkHours;\nexport default WorkHours;\nvar _c;\n$RefreshReg$(_c, \"WorkHours\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WorkHours","_s","timeLeft","setTimeLeft","calculateTimeLeft","now","Date","start","end","setHours","difference","hours","Math","floor","minutes","seconds","timer","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/time-attendance-system/src/src/pages/WorkHours.js"],"sourcesContent":["// src/pages/WorkingHours.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport './WorkHours.css';\r\n\r\nconst WorkHours = () => {\r\n  const [timeLeft, setTimeLeft] = useState('');\r\n\r\n  useEffect(() => {\r\n    const calculateTimeLeft = () => {\r\n      const now = new Date();\r\n      const start = new Date();\r\n      const end = new Date();\r\n      \r\n      // Set start time to 8:00 AM and end time to 4:00 PM\r\n      start.setHours(8, 0, 0, 0); // 8:00 AM\r\n      end.setHours(16, 0, 0, 0); // 4:00 PM\r\n\r\n      if (now < start) {\r\n        setTimeLeft('The workday has not started yet.');\r\n      } else if (now >= end) {\r\n        setTimeLeft('The workday has ended.');\r\n      } else {\r\n        const difference = end - now;\r\n        const hours = Math.floor((difference / (1000 * 60 * 60)) % 24);\r\n        const minutes = Math.floor((difference / 1000 / 60) % 60);\r\n        const seconds = Math.floor((difference / 1000) % 60);\r\n        setTimeLeft(`${hours}h ${minutes}m ${seconds}s`);\r\n      }\r\n    };\r\n\r\n    calculateTimeLeft();\r\n    const timer = setInterval(calculateTimeLeft, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"working-hours-container\">\r\n      <h2>Working Hours Countdown</h2>\r\n      <div className=\"countdown-timer\">{timeLeft}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkHours;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMO,iBAAiB,GAAGA,CAAA,KAAM;MAC9B,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;MACtB,MAAMC,KAAK,GAAG,IAAID,IAAI,CAAC,CAAC;MACxB,MAAME,GAAG,GAAG,IAAIF,IAAI,CAAC,CAAC;;MAEtB;MACAC,KAAK,CAACE,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAC5BD,GAAG,CAACC,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;MAE3B,IAAIJ,GAAG,GAAGE,KAAK,EAAE;QACfJ,WAAW,CAAC,kCAAkC,CAAC;MACjD,CAAC,MAAM,IAAIE,GAAG,IAAIG,GAAG,EAAE;QACrBL,WAAW,CAAC,wBAAwB,CAAC;MACvC,CAAC,MAAM;QACL,MAAMO,UAAU,GAAGF,GAAG,GAAGH,GAAG;QAC5B,MAAMM,KAAK,GAAGC,IAAI,CAACC,KAAK,CAAEH,UAAU,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,GAAI,EAAE,CAAC;QAC9D,MAAMI,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEH,UAAU,GAAG,IAAI,GAAG,EAAE,GAAI,EAAE,CAAC;QACzD,MAAMK,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAEH,UAAU,GAAG,IAAI,GAAI,EAAE,CAAC;QACpDP,WAAW,CAAC,GAAGQ,KAAK,KAAKG,OAAO,KAAKC,OAAO,GAAG,CAAC;MAClD;IACF,CAAC;IAEDX,iBAAiB,CAAC,CAAC;IACnB,MAAMY,KAAK,GAAGC,WAAW,CAACb,iBAAiB,EAAE,IAAI,CAAC;IAClD,OAAO,MAAMc,aAAa,CAACF,KAAK,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA;IAAKoB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtCrB,OAAA;MAAAqB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCzB,OAAA;MAAKoB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAElB;IAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAACvB,EAAA,CArCID,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}